{"version":3,"sources":["uteis/constantes.js","components/InputBusca.jsx","components/Busca.jsx","components/CriarNovo.jsx","pages/PagInicial.jsx","redux/selectors.js","components/AdicionarInteressado.jsx","components/Cadastro.jsx","redux/types.js","redux/actions.js","pages/PagCadastro.jsx","components/Detalhes.jsx","components/CardProcesso.jsx","components/Listagem.jsx","components/Loading.jsx","routes/index.js","pages/PagResultado.jsx","redux/reducers.js","services/ProcessosAPI.js","redux/sagas.js","redux/store.js","index.js"],"names":["useQuery","URLSearchParams","useLocation","search","get","PROCESSO_VAZIO","numero","entrada","Date","toLocaleDateString","interessados","descricao","assunto","InputBusca","value","onChange","id","Paper","TextField","variant","size","fullWidth","autoFocus","placeholder","InputProps","endAdornment","InputAdornment","IconButton","edge","Busca","pagInicial","history","useHistory","busca","className","Typography","event","target","push","CriarNovo","NOVO","to","Button","style","backgroundColor","padding","component","Link","PagInicial","selectProcessos","store","processos","AdicionarInteressado","arrayHelpers","errorInteressados","touched","setFieldTouched","useState","interessado","setInteressado","label","error","helperText","onBlur","type","onClick","alert","background","color","Cadastro","adicionar","voltar","atual","useSelector","yupSchema","yup","shape","required","min","enableReinitialize","validadeOnMount","validationSchema","initialValues","onSubmit","values","errors","setFieldValue","width","height","name","disabled","List","dense","length","map","i","index","render","multiline","rows","rowsMax","BUSCAR","BUSCAR_ID","BUSCAR_PROCESSO","BUSCAR_PROCESSO_ID","ADICIONAR_PROCESSO","ATUALIZAR_PROCESSO","REMOVER_PROCESSO","buscarProcesso","types","payload","PagCadastro","dispatch","useDispatch","useParams","useEffect","buscarProcessoID","processo","atualizarProcesso","adicionarProcesso","Detalhes","idAtual","editar","remover","fechar","find","proc","elevation","square","rowSpan","Avatar","colSpan","CardProcesso","cardAtual","primaryColor","border","Listagem","Loading","routes","path","setIdAtual","loading","setLoading","setTimeout","handleFechar","exact","rootReducer","state","action","BASE_URL","axios","method","url","data","catch","query","QUERY_URL","then","response","delete","buscar","buscarID","atualizar","watchBuscar","watchBuscarID","watchAdicionar","watchAtualizar","watchRemover","rootSaga","call","ProcessosAPI","put","takeLatest","takeEvery","all","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","basename","process","route","document","getElementById"],"mappings":"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","file":"static/js/main.a4df0b03.chunk.js","sourcesContent":["import { useLocation } from \"react-router-dom\";\r\n\r\nexport const useQuery = () => {\r\n  const query = new URLSearchParams(useLocation().search).get(\"q\");\r\n  return query || \"\";\r\n};\r\n\r\nexport const PROCESSO_VAZIO = {\r\n  numero: \"\",\r\n  entrada: new Date().toLocaleDateString(\"pt-BR\"),\r\n  interessados: [],\r\n  descricao: \"\",\r\n  assunto: \"\",\r\n};\r\n\r\n// export const LISTA_PROCESSOS = [\r\n//   {\r\n//     nome: \"Kihn-Schmitt\",\r\n//     data: \"12/01/2020\",\r\n//     id: 1,\r\n//   },\r\n//   {\r\n//     nome: \"Monahan Inc\",\r\n//     data: \"26/01/2021\",\r\n//     id: 2,\r\n//   },\r\n//   {\r\n//     nome: \"Hettinger and Sons\",\r\n//     data: \"28/12/2020\",\r\n//     id: 3,\r\n//   },\r\n//   {\r\n//     nome: \"Harvey, Mann and Gaylord\",\r\n//     data: \"16/01/2021\",\r\n//     id: 4,\r\n//   },\r\n//   {\r\n//     nome: \"Medhurst-Grady\",\r\n//     data: \"01/12/2020\",\r\n//     id: 5,\r\n//   },\r\n//   {\r\n//     nome: \"Jacobi, Botsford and Morar\",\r\n//     data: \"14/01/2021\",\r\n//     id: 6,\r\n//   },\r\n//   {\r\n//     nome: \"Okuneva, Considine and O'Kon\",\r\n//     data: \"31/12/2020\",\r\n//     id: 7,\r\n//   },\r\n// ];\r\n","import { IconButton, InputAdornment, Paper, TextField } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst InputBusca = ({ value, onChange }) => {\r\n  return (\r\n    <div id=\"inputBusca\">\r\n      <Paper>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          autoFocus\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Pesquise por uma informação do processo...\"\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment>\r\n                <IconButton edge=\"end\">\r\n                  <SearchIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBusca;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { useQuery } from \"../uteis/constantes\";\r\nimport InputBusca from \"./InputBusca\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Busca = ({ pagInicial }) => {\r\n  const history = useHistory();\r\n  const busca = useQuery();\r\n\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    value //\r\n      ? history.push(`/busca?q=${value}`)\r\n      : history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"busca\">\r\n      <Typography\r\n        variant={pagInicial ? \"h5\" : \"subtitle2\"}\r\n        className={`title ${pagInicial ? \"primary-color\" : \"\"}`}\r\n      >\r\n        Busca de processos\r\n      </Typography>\r\n      <InputBusca value={busca} onChange={handleChange} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Busca;\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CriarNovo = ({ pagInicial }) => {\r\n  const NOVO = \"/processo\";\r\n\r\n  return pagInicial ? (\r\n    <div className=\"criar-novo\">\r\n      <Typography>\r\n        Você pode criar um novo processo{\" \"}\r\n        <Link to={NOVO} className=\"primary-color\">\r\n          clicando aqui\r\n        </Link>\r\n        .\r\n      </Typography>\r\n    </div>\r\n  ) : (\r\n    <Button\r\n      id=\"btnNovo\"\r\n      className=\"button-label\"\r\n      variant=\"contained\"\r\n      style={{\r\n        backgroundColor: \"#ffffff\",\r\n        padding: \"8px 32px\",\r\n      }}\r\n      component={Link}\r\n      to={NOVO}\r\n    >\r\n      NOVO\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CriarNovo;\r\n","import \"../assets/css/guideline.css\";\r\nimport \"../assets/css/paginicial.css\";\r\nimport Busca from \"../components/Busca\";\r\nimport CriarNovo from \"../components/CriarNovo\";\r\n\r\nconst PagInicial = () => {\r\n  return (\r\n    <div className=\"pag-inicial\">\r\n      <Busca pagInicial={true} />\r\n      <CriarNovo pagInicial={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagInicial;\r\n","// export const getReducer = (store) => store.reducer;\r\n// export const getProcessos = (store) => store.reducer.processos;\r\nexport const selectProcessos = (store) => store.processos;\r\nexport const selectProcessoPorID = (id) => (store) =>\r\n  store.processos.find((proc) => proc.id === id);\r\n","import { useState } from \"react\";\r\nimport { Field } from \"formik\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst AdicionarInteressado = ({\r\n  arrayHelpers,\r\n  errorInteressados,\r\n  touched,\r\n  setFieldTouched,\r\n}) => {\r\n  const [interessado, setInteressado] = useState(\"\");\r\n\r\n  const handleChange = (event) => setInteressado(event.target.value);\r\n\r\n  const handleClick = () => {\r\n    if (interessado) {\r\n      arrayHelpers.push(interessado);\r\n      setInteressado(\"\");\r\n    } else alert(\"Preencha o nome do novo interessado.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"adicionar-interessado\">\r\n      <Field\r\n        component={TextField}\r\n        fullWidth\r\n        label=\"Novo Interessado\"\r\n        error={touched.interessados && errorInteressados ? true : false}\r\n        helperText={touched.interessados && errorInteressados ? errorInteressados : \"\"}\r\n        value={interessado}\r\n        onBlur={() => setFieldTouched(\"interessados\")}\r\n        onChange={handleChange}\r\n      />\r\n      <Button\r\n        type=\"button\"\r\n        variant=\"contained\"\r\n        onClick={handleClick}\r\n        style={{ background: \"#c4c4c4\", color: \"#ffffff\" }}\r\n        size=\"small\"\r\n        className=\"button-label\"\r\n      >\r\n        ADICIONAR\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdicionarInteressado;\r\n","import { useSelector } from \"react-redux\";\r\nimport { Formik, Form, Field, FieldArray } from \"formik\";\r\nimport { selectProcessos } from \"../redux/selectors\";\r\nimport { PROCESSO_VAZIO } from \"../uteis/constantes\";\r\nimport AdicionarInteressado from \"../components/AdicionarInteressado\";\r\nimport { Button, IconButton, List, TextField, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport * as yup from \"yup\";\r\n\r\nconst Cadastro = ({ adicionar, voltar }) => {\r\n  const atual = useSelector(selectProcessos) || {};\r\n\r\n  const yupSchema = yup.object().shape({\r\n    assunto: yup.string().required(\"Preencha o assunto.\"),\r\n    interessados: yup.array().min(1, \"Adicione ao menos uma pessoa.\"),\r\n    descricao: yup.string().required(\"Preencha a descrição.\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"form-cadastro\">\r\n      <Formik\r\n        enableReinitialize\r\n        validadeOnMount={true}\r\n        validationSchema={yupSchema}\r\n        initialValues={atual.id ? atual : PROCESSO_VAZIO}\r\n        onSubmit={(values) => {\r\n          adicionar(values);\r\n        }}\r\n      >\r\n        {({ values, touched, errors, setFieldValue, setFieldTouched }) => (\r\n          <Form>\r\n            <header>\r\n              <Typography variant=\"subtitle1\" className=\"title\">\r\n                {atual.id ? \"Editar processo\" : \"Cadastro de processo\"}\r\n              </Typography>\r\n\r\n              <IconButton onClick={voltar}>\r\n                <CloseIcon style={{ width: \"1.5em\", height: \"1.5em\" }} />\r\n              </IconButton>\r\n            </header>\r\n\r\n            <div className=\"form\">\r\n              {atual.id && (\r\n                <>\r\n                  <Field\r\n                    component={TextField}\r\n                    fullWidth\r\n                    label=\"Número\"\r\n                    name=\"numero\"\r\n                    value={values.numero}\r\n                    disabled\r\n                  />\r\n\r\n                  <Field\r\n                    component={TextField}\r\n                    fullWidth\r\n                    label=\"Data\"\r\n                    name=\"entrada\"\r\n                    value={values.entrada}\r\n                    disabled\r\n                  />\r\n                </>\r\n              )}\r\n\r\n              <Field\r\n                component={TextField}\r\n                fullWidth\r\n                label=\"Assunto\"\r\n                name=\"assunto\"\r\n                error={touched.assunto && errors.assunto ? true : false}\r\n                helperText={touched.assunto && errors.assunto ? errors.assunto : \"\"}\r\n                value={values.assunto}\r\n                onBlur={() => setFieldTouched(\"assunto\")}\r\n                onChange={(event) => setFieldValue(\"assunto\", event.target.value)}\r\n                className=\"campo-form\"\r\n              />\r\n\r\n              <List dense={true}>\r\n                {values.interessados && values.interessados.length > 0 ? (\r\n                  <>\r\n                    <Typography variant=\"body2\">Interessados</Typography>\r\n                    {values.interessados.map((i, index) => (\r\n                      <Typography variant=\"body1\" key={index}>\r\n                        {i}\r\n                      </Typography>\r\n                    ))}\r\n                  </>\r\n                ) : null}\r\n              </List>\r\n\r\n              <FieldArray\r\n                name=\"interessados\"\r\n                type=\"text\"\r\n                className=\"campo-form\"\r\n                render={(arrayHelpers) => (\r\n                  <AdicionarInteressado\r\n                    arrayHelpers={arrayHelpers}\r\n                    errorInteressados={errors.interessados}\r\n                    touched={touched}\r\n                    setFieldTouched={setFieldTouched}\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Field\r\n                component={TextField}\r\n                fullWidth\r\n                label=\"Descrição\"\r\n                name=\"descricao\"\r\n                helperText={touched.descricao && errors.descricao ? errors.descricao : \"\"}\r\n                error={touched.descricao && errors.descricao ? true : false}\r\n                multiline\r\n                rows={3}\r\n                rowsMax={3}\r\n                value={values.descricao}\r\n                onBlur={() => setFieldTouched(\"descricao\")}\r\n                onChange={(event) => setFieldValue(\"descricao\", event.target.value)}\r\n                className=\"campo-form\"\r\n              />\r\n            </div>\r\n\r\n            <footer>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                disabled={atual.id ? true : false}\r\n              >\r\n                SALVAR\r\n              </Button>\r\n            </footer>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cadastro;\r\n","export const BUSCAR = \"BUSCAR\";\r\nexport const BUSCAR_ID = \"BUSCAR_ID\";\r\n\r\nexport const BUSCAR_PROCESSO = \"BUSCAR_PROCESSO\";\r\nexport const BUSCAR_PROCESSO_ID = \"BUSCAR_PROCESSO_ID\";\r\nexport const ADICIONAR_PROCESSO = \"ADICIONAR_PROCESSO\";\r\nexport const ATUALIZAR_PROCESSO = \"ATUALIZAR_PROCESSO\";\r\nexport const REMOVER_PROCESSO = \"REMOVER_PROCESSO\";\r\n","import * as types from \"./types\";\r\n\r\nexport const buscarProcesso = (busca) => ({\r\n  type: types.BUSCAR_PROCESSO,\r\n  payload: busca,\r\n});\r\n\r\nexport const buscarProcessoID = (id) => ({\r\n  type: types.BUSCAR_PROCESSO_ID,\r\n  payload: id,\r\n});\r\n\r\nexport const adicionarProcesso = (processo) => ({\r\n  type: types.ADICIONAR_PROCESSO,\r\n  payload: processo,\r\n});\r\n\r\nexport const atualizarProcesso = (processo) => ({\r\n  type: types.ATUALIZAR_PROCESSO,\r\n  payload: processo,\r\n});\r\n\r\nexport const removerProcesso = (id) => ({\r\n  type: types.REMOVER_PROCESSO,\r\n  payload: id,\r\n});\r\n","import \"../assets/css/guideline.css\";\r\nimport \"../assets/css/pagcadastro.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Cadastro from \"../components/Cadastro\";\r\nimport {\r\n  adicionarProcesso,\r\n  atualizarProcesso,\r\n  buscarProcesso,\r\n  buscarProcessoID,\r\n} from \"../redux/actions\";\r\n\r\nconst PagCadastro = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    id //\r\n      ? dispatch(buscarProcessoID(id))\r\n      : dispatch(buscarProcesso(\"\"));\r\n  }, [dispatch, id]);\r\n\r\n  const adicionar = (processo) => {\r\n    processo.id //\r\n      ? dispatch(atualizarProcesso(processo)) //\r\n      : dispatch(adicionarProcesso(processo));\r\n    voltar();\r\n  };\r\n\r\n  const voltar = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"pag-cadastro\">\r\n      <Cadastro adicionar={adicionar} voltar={voltar} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PagCadastro;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectProcessoPorID } from \"../redux/selectors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Avatar, Button, IconButton, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst Detalhes = ({ idAtual, editar, remover, fechar }) => {\r\n  const atual = useSelector(selectProcessoPorID(idAtual));\r\n\r\n  return (\r\n    <div className=\"detalhes\">\r\n      <Paper id=\"paperDetalhes\" elevation={3} square>\r\n        <header>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td rowSpan=\"4\" id=\"avatarDetalhes\">\r\n                  <Avatar className=\"avatar\" variant=\"square\" />\r\n                </td>\r\n                <td>\r\n                  <Typography variant=\"subtitle2\" className=\"subtitle\">\r\n                    Processo\r\n                  </Typography>\r\n                </td>\r\n                <td>\r\n                  <Typography variant=\"subtitle2\" className=\"subtitle\">\r\n                    Data\r\n                  </Typography>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>{atual.numero}</td>\r\n                <td>{atual.entrada}</td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <Typography variant=\"subtitle2\" className=\"subtitle\">\r\n                    Assunto\r\n                  </Typography>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">{atual.assunto}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <IconButton onClick={fechar}>\r\n            <CloseIcon style={{ width: \"1.5em\", height: \"1.5em\" }} />\r\n          </IconButton>\r\n        </header>\r\n        <div className=\"conteudo\">\r\n          <div className=\"interessados\">\r\n            <ul type=\"none\">\r\n              <Typography variant=\"subtitle2\" className=\"subtitle\">\r\n                Interessados\r\n              </Typography>\r\n              {atual.interessados.map((i, index) => (\r\n                <li key={index}>{i}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"descricao\">\r\n            <Typography variant=\"subtitle2\" className=\"subtitle\">\r\n              Descrição\r\n            </Typography>\r\n            {atual.descricao}\r\n          </div>\r\n        </div>\r\n        <footer>\r\n          <Button\r\n            className=\"button-label\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"#ffffff\",\r\n              color: \"#757575\",\r\n              padding: \"4px 24px\",\r\n            }}\r\n            onClick={remover}\r\n          >\r\n            REMOVER\r\n          </Button>\r\n          <Button\r\n            className=\"button-label\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            style={{\r\n              backgroundColor: \"#ffffff\",\r\n              color: \"#005b95\",\r\n              padding: \"4px 24px\",\r\n            }}\r\n            onClick={editar}\r\n          >\r\n            EDITAR\r\n          </Button>\r\n        </footer>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detalhes;\r\n","import { Avatar, Paper, Typography } from \"@material-ui/core\";\r\n\r\nconst CardProcesso = ({ processo, onClick, idAtual }) => {\r\n  const cardAtual = idAtual === processo.id ? \"2px #005b95 solid\" : \"1px #c4c4c4 solid\";\r\n  const primaryColor = idAtual === processo.id ? \"primary-color\" : \"\";\r\n\r\n  return (\r\n    <div className=\"card-processo\" onClick={() => onClick(processo)}>\r\n      <Paper elevation={3} square style={{ padding: \"12px\", border: cardAtual }}>\r\n        {idAtual ? (\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th>\r\n                  <Typography className={`subtitle ${primaryColor}`}>Número</Typography>\r\n                </th>\r\n                <th>\r\n                  <Typography className={`subtitle ${primaryColor}`}>Assunto</Typography>\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <span className={`${primaryColor}`}>{processo.numero}</span>\r\n                </td>\r\n                <td>\r\n                  <span className={`${primaryColor}`}>{processo.assunto}</span>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <th colSpan=\"2\">\r\n                  <Typography className={`subtitle ${primaryColor}`}>\r\n                    Interessado\r\n                  </Typography>\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td colSpan=\"2\">\r\n                  <span className={`${primaryColor}`}>{processo.interessados[0]}</span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th id=\"avatarListagem\" rowSpan=\"2\">\r\n                  <Avatar className=\"avatar\" variant=\"square\" />\r\n                </th>\r\n                <th>\r\n                  <Typography className=\"subtitle\">Número</Typography>\r\n                </th>\r\n                <th>\r\n                  <Typography className=\"subtitle\">Assunto</Typography>\r\n                </th>\r\n                <th>\r\n                  <Typography className=\"subtitle\">Interessado</Typography>\r\n                </th>\r\n                <th>\r\n                  <Typography className=\"subtitle\">Descrição</Typography>\r\n                </th>\r\n              </tr>\r\n              <tr>\r\n                <td>{processo.numero}</td>\r\n                <td>{processo.assunto}</td>\r\n                <td>{processo.interessados[0]}</td>\r\n                <td>{processo.descricao}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardProcesso;\r\n","import { Typography } from \"@material-ui/core\";\r\nimport CardProcesso from \"../components/CardProcesso\";\r\n\r\nconst Listagem = ({ idAtual, processos, onClick }) => {\r\n  return (\r\n    <div className=\"listagem\">\r\n      {processos ? (\r\n        processos.length === 0 ? (\r\n          <Typography variant=\"subtitle1\" style={{}}>\r\n            Nenhum processo encontrado.\r\n          </Typography>\r\n        ) : processos.length > 0 ? (\r\n          processos.map((processo, index) => (\r\n            <CardProcesso\r\n              key={index}\r\n              processo={processo}\r\n              onClick={onClick}\r\n              idAtual={idAtual}\r\n            />\r\n          ))\r\n        ) : null\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listagem;\r\n","import ReactLoading from \"react-loading\";\r\n\r\nconst Loading = () => {\r\n  const type = \"spinningBubbles\";\r\n  const color = \"#757575\";\r\n  const height = 128;\r\n  const width = 128;\r\n\r\n  return (\r\n    <div id=\"loadingBusca\">\r\n      <ReactLoading type={type} color={color} height={height} width={width} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import PagInicial from \"../pages/PagInicial\";\r\nimport PagCadastro from \"../pages/PagCadastro\";\r\nimport PagResultado from \"../pages/PagResultado\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/busca\",\r\n    component: PagResultado,\r\n  },\r\n  {\r\n    exact: true,\r\n    path: \"/processo\",\r\n    component: PagCadastro,\r\n  },\r\n  {\r\n    path: \"/processo/:id\",\r\n    component: PagCadastro,\r\n  },\r\n  {\r\n    path: \"/\",\r\n    component: PagInicial,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import \"../assets/css/guideline.css\";\r\nimport \"../assets/css/pagresultado.css\";\r\nimport \"../assets/css/comp-listagem.css\";\r\nimport \"../assets/css/comp-detalhes.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { buscarProcesso, removerProcesso } from \"../redux/actions\";\r\nimport { selectProcessos } from \"../redux/selectors\";\r\nimport { useQuery } from \"../uteis/constantes\";\r\nimport Busca from \"../components/Busca\";\r\nimport CriarNovo from \"../components/CriarNovo\";\r\nimport Detalhes from \"../components/Detalhes\";\r\nimport Listagem from \"../components/Listagem\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nconst PagResultado = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const busca = useQuery();\r\n  const processos = useSelector(selectProcessos);\r\n  const [idAtual, setIdAtual] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(\r\n    () =>\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (busca) dispatch(buscarProcesso(busca));\r\n  }, [dispatch, busca]);\r\n\r\n  const handleClick = (processo) => {\r\n    processo.id === idAtual //\r\n      ? setIdAtual(\"\")\r\n      : setIdAtual(processo.id);\r\n  };\r\n\r\n  const handleEditar = () => {\r\n    history.push(`/processo/${idAtual}`);\r\n    handleFechar();\r\n  };\r\n\r\n  const handleRemover = () => {\r\n    dispatch(removerProcesso(idAtual));\r\n    handleFechar();\r\n    alert(\"O processo foi removido com sucesso.\");\r\n  };\r\n\r\n  const handleFechar = () => {\r\n    setIdAtual(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pag-resultado\">\r\n        <header>\r\n          <Busca pagInicial={false} />\r\n          <CriarNovo pagInicial={false} />\r\n        </header>\r\n\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <div className=\"conteudo\">\r\n            <Listagem idAtual={idAtual} processos={processos} onClick={handleClick} />\r\n\r\n            {idAtual && (\r\n              <Detalhes\r\n                idAtual={idAtual}\r\n                editar={handleEditar}\r\n                remover={handleRemover}\r\n                fechar={handleFechar}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PagResultado;\r\n","// import { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\n\r\nconst rootReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.BUSCAR:\r\n      return { ...state, processos: action.payload };\r\n    case types.BUSCAR_ID:\r\n      return { ...state, processos: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n\r\n// export const rootReducer = combineReducers({\r\n//   reducer,\r\n// });\r\n","import axios from \"axios\";\r\n// import * as constants from \"./constants\";\r\n\r\n// const BASE_URL = `${constants.DEVINHOUSE_API}`; // => /processo\r\nconst BASE_URL = \"http://localhost:3002/processo\";\r\n\r\nclass ProcessosAPI {\r\n  /** POST http://localhost:3002/processo \\\r\n   *    -H 'accept: application/json' \\\r\n   *    -H 'content-type: application/json' \\\r\n   *    -d '{\"descricao\" : \"Solicitação de licença-prêmio\", \"assunto\" : \"Licença\", \"interessados\" : [\"Edmilson Cherem\"]}'\r\n   */\r\n  adicionar(processo) {\r\n    return axios({\r\n      method: \"post\",\r\n      url: BASE_URL,\r\n      data: {\r\n        descricao: processo.descricao,\r\n        assunto: processo.assunto,\r\n        interessados: processo.interessados,\r\n      },\r\n    }).catch((error) => {\r\n      throw error;\r\n    });\r\n  }\r\n  // url: `${BASE_URL}/${processo.id}`,\r\n  // atualizar(processo) {\r\n  //   return axios({\r\n  //     method: \"post\",\r\n  //     url: BASE_URL,\r\n  //     data: {\r\n  //       id: processo.id,\r\n  //       descricao: processo.descricao,\r\n  //       assunto: processo.assunto,\r\n  //       interessados: processo.interessados,\r\n  //     },\r\n  //   }).catch((error) => {\r\n  //     throw error;\r\n  //   });\r\n  // }\r\n\r\n  // atualizar(processo) {\r\n  // return axios.put(BASE_URL, processo).catch((error) => {\r\n  // throw error;\r\n  // });\r\n  // }\r\n\r\n  /** GET http://localhost:3002/processo?q={query} */\r\n  buscar(query) {\r\n    const QUERY_URL = query ? `${BASE_URL}?q=${query}` : BASE_URL;\r\n    return axios\r\n      .get(QUERY_URL)\r\n      .then((response) => response.data)\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  // buscar(query) {\r\n  //   return axios\r\n  //     .get(`${BASE_URL}?q=${query}`)\r\n  //     .then((response) => {\r\n  //       if (query === \"\") return [];\r\n  //\r\n  //       return response.data.filter((proc) =>\r\n  //         proc.nome.toLowerCase().search(query.toLowerCase()) > -1 ||\r\n  //         proc.data.search(query) > -1\r\n  //           ? proc\r\n  //           : null\r\n  //       );\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       throw error;\r\n  //     });\r\n  // }\r\n\r\n  /** GET http://localhost:3002/processo/{id} */\r\n  buscarID(id) {\r\n    return axios\r\n      .get(`${BASE_URL}/${id}`)\r\n      .then((response) => response.data)\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  }\r\n  // }buscarID(id) {\r\n  //   return axios\r\n  //     .get(`${BASE_URL}/${id}`)\r\n  //     .then((response) => response.data)\r\n  //     .catch((error) => {\r\n  //       throw error;\r\n  //     });\r\n  // }\r\n\r\n  /** DELETE http://localhost:3002/processo/{id} */\r\n  remover(id) {\r\n    return axios.delete(`${BASE_URL}/${id}`).catch((error) => {\r\n      throw error;\r\n    });\r\n  }\r\n  //   return axios.delete(`${BASE_URL}/${id}`).catch((error) => {\r\n  //     throw error;\r\n  //   });\r\n  // }\r\n}\r\n\r\nexport default new ProcessosAPI();\r\n","import { all, call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport ProcessosAPI from \"../services/ProcessosAPI\";\r\nimport * as types from \"./types\";\r\n\r\n/**\r\n * WORKERS\r\n */\r\nfunction* buscar(action) {\r\n  const processos = yield call(ProcessosAPI.buscar, action.payload);\r\n  yield put({ type: types.BUSCAR, payload: processos });\r\n}\r\n\r\nfunction* buscarID(action) {\r\n  const atual = yield call(ProcessosAPI.buscarID, action.payload);\r\n  yield put({ type: types.BUSCAR_ID, payload: atual });\r\n}\r\n\r\nfunction* adicionar(action) {\r\n  yield call(ProcessosAPI.adicionar, action.payload);\r\n\r\n  // const processos = yield call(ProcessosAPI.buscar, action.payload);\r\n  // yield put({ type: types.BUSCAR, payload: processos });\r\n}\r\n\r\nfunction* atualizar(action) {\r\n  yield call(ProcessosAPI.atualizar, action.payload);\r\n\r\n  // const processos = yield call(ProcessosAPI.buscar, action.payload);\r\n  // yield put({ type: types.BUSCAR, payload: processos });\r\n}\r\n\r\nfunction* remover(action) {\r\n  yield call(ProcessosAPI.remover, action.payload);\r\n\r\n  const processos = yield call(ProcessosAPI.buscar, \"\");\r\n  yield put({ type: types.BUSCAR, payload: processos });\r\n}\r\n\r\n/**\r\n * WATCHERS\r\n */\r\nfunction* watchBuscar() {\r\n  yield takeLatest(types.BUSCAR_PROCESSO, buscar);\r\n}\r\n\r\nfunction* watchBuscarID() {\r\n  yield takeLatest(types.BUSCAR_PROCESSO_ID, buscarID);\r\n}\r\n\r\nfunction* watchAdicionar() {\r\n  yield takeEvery(types.ADICIONAR_PROCESSO, adicionar);\r\n}\r\n\r\nfunction* watchAtualizar() {\r\n  yield takeEvery(types.ATUALIZAR_PROCESSO, atualizar);\r\n}\r\n\r\nfunction* watchRemover() {\r\n  yield takeEvery(types.REMOVER_PROCESSO, remover);\r\n}\r\n\r\n/**\r\n * rootSaga()\r\n */\r\n// export default function* rootSaga() {\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchBuscar(),\r\n    watchBuscarID(),\r\n    watchAdicionar(),\r\n    // takeEvery(types.ADICIONAR_PROCESSO, adicionar),\r\n    watchAtualizar(),\r\n    watchRemover(),\r\n  ]);\r\n}\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n\r\n// store.subscribe(() => console.log(JSON.stringify(store.getState(), null, 2)));\r\n// store.subscribe(() => console.log(store.getState()));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"./routes\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n// import { criarServidor } from \"./services/MirageServer\";\r\n// const ambiente = process.env.NODE_ENV;\r\n// if (ambiente !== \"production\") {\r\n// criarServidor({ enviroment: ambiente });\r\n// }\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        {routes.map((route) => (\r\n          <Route\r\n            key={route.path}\r\n            path={route.path}\r\n            component={route.component}\r\n            exact={route.exact}\r\n          />\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  </Provider>,\r\n\r\n  // <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}